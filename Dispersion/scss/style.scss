body {
  min-height : 100vh;
  display    : flex;
  background : #111;
}

$pi: 3.14159265359;
$_precision: 10;

@function pow($base, $exp) {
  $value: $base;
  @if $exp > 1 {
    @for $i from 2 through $exp {
      $value: $value * $base;
    }
  }
  @if $exp < 1{
    @for $i from 0 through -$exp {
      $value: $value / $base;
    }
  }
  @return $value;
}

@function fact($num) {
  $fact: 1;
  @if $num > 0{
    @for $i from 1 through $num {
      $fact: $fact * $i;
    }
  }
  @return $fact;
}

@function _to_unitless_rad($angle) {
  @if unit($angle) == "deg" {
    $angle: $angle / 180deg * $pi;
  }
  @if unit($angle) == "rad" {
    $angle: $angle / 1rad;
  }
  @return $angle;
}

@function sin($angle){
  $a: _to_unitless_rad($angle);
  $sin: $a;
  @for $n from 1 through $_precision {
    $sin: $sin + (pow(-1, $n) / fact(2 * $n + 1) ) * pow($a, (2 * $n + 1));
  }
  @return $sin;
}

@function cos($angle){
  $a: _to_unitless_rad($angle);
  $cos: 1;
  @for $n from 1 through $_precision {
    $cos: $cos + ( pow(-1,$n) / fact(2*$n) ) * pow($a,2*$n);
  }
  @return $cos;
}

@function tan($angle){
  @return sin($angle) / cos($angle);
}

@function radiant($number) {
  @return ($number * 3.14159265359 / 180);
}

@function dispersion($number,$radio) {
  $angle: 360 / $number;
  $box-shadow: '';
  @for $i from 0 through $number {
    $box-shadow: $box-shadow 
      + $radio * cos(radiant($angle * $i))
      + ' '
      + $radio * sin(radiant($angle * $i));
    @if $i < $number { $box-shadow: $box-shadow + ',' }
  }
  
  @return unquote($box-shadow);
}

div {
  --color    : hsl(60,100%,50%);
  margin     : auto;
  height     : 30px;
  width      : 30px;
  font-size  : 3em;
  color      : var(--color);
  background-color : var(--color);
  cursor     : pointer;
  animation  : dispersion 1s infinite;
}

@keyframes dispersion {
  to {
    box-shadow : dispersion(15, 200px);
    color: transparent;
  }
}